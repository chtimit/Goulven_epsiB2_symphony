<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Pokemon extends \App\Entity\Pokemon implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Pokemon' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Pokemon' . "\0" . 'Name', '' . "\0" . 'App\\Entity\\Pokemon' . "\0" . 'Type', '' . "\0" . 'App\\Entity\\Pokemon' . "\0" . 'PV', '' . "\0" . 'App\\Entity\\Pokemon' . "\0" . 'ATK'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Pokemon' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Pokemon' . "\0" . 'Name', '' . "\0" . 'App\\Entity\\Pokemon' . "\0" . 'Type', '' . "\0" . 'App\\Entity\\Pokemon' . "\0" . 'PV', '' . "\0" . 'App\\Entity\\Pokemon' . "\0" . 'ATK'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Pokemon $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $Name): \App\Entity\Pokemon
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$Name]);

        return parent::setName($Name);
    }

    /**
     * {@inheritDoc}
     */
    public function getType(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setType(int $Type): \App\Entity\Pokemon
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$Type]);

        return parent::setType($Type);
    }

    /**
     * {@inheritDoc}
     */
    public function getPV(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPV', []);

        return parent::getPV();
    }

    /**
     * {@inheritDoc}
     */
    public function setPV(int $PV): \App\Entity\Pokemon
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPV', [$PV]);

        return parent::setPV($PV);
    }

    /**
     * {@inheritDoc}
     */
    public function getATK(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getATK', []);

        return parent::getATK();
    }

    /**
     * {@inheritDoc}
     */
    public function addATK(\App\Entity\ATK $aTK): \App\Entity\Pokemon
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addATK', [$aTK]);

        return parent::addATK($aTK);
    }

    /**
     * {@inheritDoc}
     */
    public function removeATK(\App\Entity\ATK $aTK): \App\Entity\Pokemon
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeATK', [$aTK]);

        return parent::removeATK($aTK);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnable(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnable', []);

        return parent::getEnable();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnable(bool $Enable): \App\Entity\Master
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnable', [$Enable]);

        return parent::setEnable($Enable);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTimeInterface $CreatedAt): \App\Entity\Master
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$CreatedAt]);

        return parent::setCreatedAt($CreatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTimeInterface $UpdatedAt): \App\Entity\Master
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$UpdatedAt]);

        return parent::setUpdatedAt($UpdatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeletedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeletedAt', []);

        return parent::getDeletedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeletedAt(?\DateTimeInterface $DeletedAt): \App\Entity\Master
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeletedAt', [$DeletedAt]);

        return parent::setDeletedAt($DeletedAt);
    }

}
